@charset "UTF-8";
:root {
  --point-lch: hotpink;
}

/*
  미디어쿼리 사용시 break point값을 일반 css변수에 담아놓으면 문서가 렌더링될때 변수값이 읽히기 때문에 반응형 동작이 안됨

  해결방법
  - 문서 렌더링전 미리 서버쪽에서 break point수치값 설정되야함
  - scss변수는 변수값이 렌더링전 컴파일 시점에 읽히기 때문에 가능

  scss 변수 사용법
  - _varialbe.scss라는 변수등록 전용 파일 생성
  - 해당 파일안쪽에 $변수명: 값;
  - 해당 변수 호출하려고 하는 파일에 @use '파일명'
  - 파일명.$변수명

*/
html {
  font-size: 16px;
}

* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
  color: inherit;
  font-family: "Noto Sans KR";
}

ul,
ol {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/*
  효율적인 RWD 작업을 위한 규칙
  1. 모바일 디바이스에서는 가로폭의 총합이 100%작업 (가로축에 px불가, 여백포함)
  2. 기존 데스크탑 대비 변경할 필요가 없는 코드는 미디어쿼리에 붙여넣기 할 필요 없음
  3. 높이값은 가급적 고정 px

*/
body {
  padding: 100px;
  background-color: gray;
}

div {
  width: 980px;
  background-color: white;
  padding: 50px;
  margin: 0px auto;
  border-radius: 10px;
  text-align: center;
}
div header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 50px;
  padding-bottom: 20px;
  border-bottom: 1px solid black;
}
div header h1 {
  font-family: "orbitron";
  font-size: 1.8rem;
  text-align: center;
  color: var(--point-lch);
}
div header nav {
  display: flex;
  gap: 40px;
}
div header nav a {
  font: 500 0.8rem/1 "orbitron";
  letter-spacing: 1px;
  transition: 0.5s;
}
div header nav a:hover {
  color: var(--point-lch);
  transform: scale(1.3);
}
div header .btnMobileMenu {
  font-size: 1.2rem;
  display: none;
}
div footer {
  border-top: 1px solid black;
  padding: 20px 0px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
div footer ul {
  font-size: 1.2rem;
  display: flex;
  gap: 10px;
  order: 2;
}
div footer ul li {
  color: var(--point-lch);
  transition: 0.5s;
}
div footer ul li:hover {
  transform: rotate(360deg) scale(0);
  opacity: 0;
}
div footer p {
  font-size: 0.8rem;
  order: 1;
}

@media screen and (max-width: 1200px) {
  div {
    width: 90%;
  }
  div header {
    justify-content: space-between;
  }
  div header h1 {
    font-size: 1.4rem;
  }
  div header nav {
    display: none;
  }
  div header .btnMobileMenu {
    display: block;
  }
}
@media screen and (max-width: 680px) {
  body {
    padding: 0px;
  }
  div {
    width: 100%;
    border-radius: 0px;
  }
  div header h1 {
    font-size: 1.2rem;
  }
  div footer {
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
  }
  div footer ul {
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 30px;
  }
  div footer p {
    width: 100%;
    text-align: center;
  }
}
main {
  margin-bottom: 40px;
  display: flex;
  justify-content: space-between;
}
main figure {
  width: 35%;
  height: 400px;
  margin-bottom: 30px;
  overflow: hidden;
  background-color: var(--point-lch);
}
main figure img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: 1s;
}
main figure img:hover {
  transform: scale(1.5);
  opacity: 0.5;
}
main article {
  width: 55%;
  text-align: left;
}
main article p {
  line-height: 1.5;
  margin-bottom: 30px;
  text-align: justify;
  opacity: 0.5;
}
main article a {
  background-color: black;
  font-weight: bold;
  font-size: 0.7rem;
  color: white;
  width: 100px;
  height: 30px;
  display: inline-block;
  text-align: center;
  line-height: 30px;
  border-radius: 15px;
  transition: 0.5s;
}
main article a:hover {
  width: 150px;
  background-color: var(--point-lch);
}

@media screen and (max-width: 1200px) {
  main {
    flex-wrap: wrap;
  }
  main figure {
    width: 100%;
  }
  main article {
    width: 100%;
  }
}

/*# sourceMappingURL=style.css.map */
